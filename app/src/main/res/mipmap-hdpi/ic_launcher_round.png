package appkite.jordiguzman.com.xatentresol.messages

import android.app.Activity
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.os.Environment
import android.provider.MediaStore
import android.support.v4.content.FileProvider
import android.support.v7.app.AppCompatActivity
import android.util.Log
import appkite.jordiguzman.com.xatentresol.R
import appkite.jordiguzman.com.xatentresol.model.ChatMessagePhoto
import appkite.jordiguzman.com.xatentresol.model.User
import appkite.jordiguzman.com.xatentresol.views.ChatFromItemPhoto
import appkite.jordiguzman.com.xatentresol.views.ChatToItemPhoto
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.database.*
import com.xwray.groupie.GroupAdapter
import com.xwray.groupie.ViewHolder
import kotlinx.android.synthetic.main.activity_chat_log.*
import kotlinx.android.synthetic.main.activity_photo_chat.*
import java.io.File
import java.io.IOException
import java.text.SimpleDateFormat
import java.util.*

class PhotoChatActivity : AppCompatActivity() {


    val TAKE_PICTURE = 1
    val SELECT_PICTURE = 2
    var currentPath: String? = null
    var toUser: User? = null
    var currentUser: User? = null
    val adapter = GroupAdapter<ViewHolder>()
    var uriPhoto: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_photo_chat)

        toUser = intent.getParcelableExtra(NewMessageActivity.USER_KEY)
        fetchCurrentUser()

        listenForMessages()
        launchCamera()
        button_chat_log_photo.setOnClickListener {
            performSendMessage()

        }




    }
    private fun fetchCurrentUser() {
        val uid = FirebaseAuth.getInstance().uid
        val ref= FirebaseDatabase.getInstance().getReference("/users/$uid")
        ref.addListenerForSingleValueEvent(object: ValueEventListener {

            override fun onDataChange(p0: DataSnapshot) {
                currentUser = p0.getValue(User::class.java)
                supportActionBar?.title = toUser?.username + " from: " + currentUser?.username

            }
            override fun onCancelled(p0: DatabaseError) {

            }
        })
    }
    private fun launchCamera() {
        val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
        if (intent.resolveActivity(packageManager) != null){
            var photFile: File? = null
            try {
                photFile = createImage()
            }catch (e: IOException){
                Log.d("Main", e.message)
            }
            if (photFile != null){
                val photoUri = FileProvider.getUriForFile(this, "appkite.jordiguzman.com.xatentresol.fileprovider",
                        photFile)
                intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri)
                startActivityForResult(intent, TAKE_PICTURE)
            }
        }
    }
    fun createImage(): File{
        val timeStamp = SimpleDateFormat("yyyyMMdd_HHmmss").format(Date())
        val imageName = "JPEG_" + timeStamp
        val storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES)
        val image = File.createTempFile(imageName, ".jpg", storageDir)
        currentPath = image.absolutePath
        return image
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        if (requestCode == 1 && resultCode == Activity.RESULT_OK){
            try {
                val file = File(currentPath)
                uriPhoto = Uri.fromFile(file)
                Log.d("ChatLogActivity", uriPhoto.toString())
                //toChatLogin()
                iv_photo_chat.setImageURI(uriPhoto)
            }catch (e: IOException){
                Log.d("ChatLogActivity", e.message)
            }

        }
    }

    private fun listenForMessages() {
        val fromId = FirebaseAuth.getInstance().uid
        val  toId = toUser?.uid
        val ref = FirebaseDatabase.getInstance().getReference("/user-messages/$fromId/$toId")
        ref.addChildEventListener(object: ChildEventListener {

            override fun onChildAdded(p0: DataSnapshot, p1: String?) {
                val chatMessage = p0.getValue(ChatMessagePhoto::class.java)
                if (chatMessage != null){

                    if (chatMessage.fromId == FirebaseAuth.getInstance().uid){
                        val currentUser = LatestMessagesActivity.currentUser ?: return
                        adapter.add(ChatFromItemPhoto(chatMessage.text, currentUser, uriPhoto!!))
                    }else{

                        adapter.add(ChatToItemPhoto(chatMessage.text, toUser!!, uriPhoto!!))
                    }
                }
                recyclerView_chat_log.scrollToPosition(adapter.itemCount-1)
            }

            override fun onCancelled(p0: DatabaseError) {

     